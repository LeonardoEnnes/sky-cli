{
    "name": "Advanced React TypeScript Template",
    "files": {
        "package.json": "{\n  \"name\": \"my-react-app\",\n  \"version\": \"1.0.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  },\n  \"dependencies\": {\n    \"react\": \"^17.0.2\",\n    \"react-dom\": \"^17.0.2\",\n    \"react-router-dom\": \"^5.2.0\",\n    \"axios\": \"^0.21.1\",\n    \"redux\": \"^4.1.0\",\n    \"react-redux\": \"^7.2.4\",\n    \"styled-components\": \"^5.3.0\"\n  },\n  \"devDependencies\": {\n    \"typescript\": \"^4.4.3\",\n    \"@types/react\": \"^17.0.2\",\n    \"@types/react-dom\": \"^17.0.2\",\n    \"@types/react-router-dom\": \"^5.1.7\",\n    \"@types/jest\": \"^26.0.0\",\n    \"eslint\": \"^7.32.0\",\n    \"eslint-plugin-react\": \"^7.27.1\",\n    \"eslint-plugin-import\": \"^2.24.2\",\n    \"prettier\": \"^2.4.1\",\n    \"eslint-config-prettier\": \"^8.3.0\",\n    \"eslint-plugin-prettier\": \"^4.0.0\"\n  }\n}",
        "tsconfig.json": "{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"node\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"react-jsx\"\n  },\n  \"include\": [\"src\"]\n}",
        "src/index.tsx": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './App';\nimport rootReducer from './reducers';\nimport './index.css';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);",
        "src/App.tsx": "import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport About from './components/About';\nimport NotFound from './components/NotFound';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/about\" component={About} />\n        <Route component={NotFound} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;",
        "src/components/Home.tsx": "import React from 'react';\n\nconst Home: React.FC = () => {\n  return <h1>Welcome to the Home Page!</h1>;\n};\n\nexport default Home;",
        "src/components/About.tsx": "import React from 'react';\n\nconst About: React.FC = () => {\n  return <h1>About Us</h1>;\n};\n\nexport default About;",
        "src/components/NotFound.tsx": "import React from 'react';\n\nconst NotFound: React.FC = () => {\n  return <h1>404 - Not Found</h1>;\n};\n\nexport default NotFound;",
        "src/reducers/index.ts": "import { combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({\n  // Add your reducers here\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;",
        "src/index.css": "body {\n  font-family: Arial, sans-serif;\n  margin: 0;\n  padding: 0;\n  background-color: #f4f4f4;\n  color: #333;\n}\n\nh1 {\n  color: #333;\n}",
        "public/index.html": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>My React App</title>\n</head>\n<body>\n    <div id=\"root\"></div>\n</body>\n</html>",
        ".eslintrc.json": "{\n  \"extends\": [\"react-app\", \"plugin:prettier/recommended\"],\n  \"rules\": {\n    \"react/react-in-jsx-scope\": \"off\"\n  }\n}",
        ".prettierrc": "{\n  \"singleQuote\": true,\n  \"trailingComma\": \"es5\"\n}"
    },
    "directories": [
        "src",
        "src/components",
        "src/reducers",
        "public"
    ]
}